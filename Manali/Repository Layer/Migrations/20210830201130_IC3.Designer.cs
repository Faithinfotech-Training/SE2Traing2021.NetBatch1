// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository_Layer;

namespace Repository_Layer.Migrations
{
    [DbContext(typeof(CRMdbContext))]
    [Migration("20210830201130_IC3")]
    partial class IC3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRM_Demo.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Claim_Type");

                    b.HasKey("Id")
                        .HasName("Claims_Id");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("Domain_Layer.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Batch");
                });

            modelBuilder.Entity("Domain_Layer.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseEnqId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseEnqId");

                    b.ToTable("Trainee");
                });

            modelBuilder.Entity("Domain_Layer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserClaimId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("User_Email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("User_Name");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("User_Password");

                    b.Property<string>("UserPhoneN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("User_PhoneN");

                    b.Property<DateTime>("UserRecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("User_Record_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UserUpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("User_Update_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("Userman_Id");

                    b.HasIndex("UserClaimId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain_Layer.Models.course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CourseAvaiStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Course_AvaiStatus");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Course_Description");

                    b.Property<TimeSpan>("CourseDuration")
                        .HasColumnType("time")
                        .HasColumnName("Course_Duration");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Course_Name");

                    b.Property<int>("CoursePrice")
                        .HasColumnType("int")
                        .HasColumnName("Course_Price");

                    b.Property<DateTime>("CourseRecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Course_Record_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("Course_Id");

                    b.ToTable("course");
                });

            modelBuilder.Entity("Domain_Layer.Models.courseEnquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Course_Email");

                    b.Property<DateTime>("CourseErecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Course_ERecord_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CourseFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Course_FullName");

                    b.Property<string>("CoursePhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Course_Phone");

                    b.Property<string>("CourseStageStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Course_StageStatus");

                    b.Property<int>("CourseTestScore")
                        .HasColumnType("int")
                        .HasColumnName("Course_TestScore");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("courseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.HasKey("Id")
                        .HasName("courseenq_id");

                    b.HasIndex("courseId");

                    b.ToTable("CourseEnquiry");
                });

            modelBuilder.Entity("Domain_Layer.Models.resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ResourceAvaiStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Resource_AvaiStatus");

                    b.Property<string>("ResourceDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Resource_Description");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Resource_Name");

                    b.Property<int>("ResourcePrice")
                        .HasColumnType("int")
                        .HasColumnName("Resource_Price");

                    b.Property<DateTime>("ResourceRecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Resource_Record_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Resource_Type");

                    b.HasKey("Id")
                        .HasName("Resource_Id");

                    b.ToTable("resource");
                });

            modelBuilder.Entity("Domain_Layer.Models.resourceEnquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ResourceEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Resource_Email");

                    b.Property<DateTime>("ResourceErecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Resource_ERecord_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ResourceFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Resource_FullName");

                    b.Property<string>("ResourcePhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Resource_Phone");

                    b.Property<string>("ResourceStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Resource_Status");

                    b.Property<int>("resourceId")
                        .HasColumnType("int")
                        .HasColumnName("resourceId");

                    b.HasKey("Id")
                        .HasName("Resenq_Id");

                    b.HasIndex("resourceId");

                    b.ToTable("ResourceEnquiry");
                });

            modelBuilder.Entity("Domain_Layer.Models.Batch", b =>
                {
                    b.HasOne("Domain_Layer.Models.course", "course")
                        .WithMany("Batches")
                        .HasForeignKey("CourseId");

                    b.Navigation("course");
                });

            modelBuilder.Entity("Domain_Layer.Models.Trainee", b =>
                {
                    b.HasOne("Domain_Layer.Models.courseEnquiry", "CourseEnq")
                        .WithMany("Trainees")
                        .HasForeignKey("CourseEnqId");

                    b.Navigation("CourseEnq");
                });

            modelBuilder.Entity("Domain_Layer.Models.User", b =>
                {
                    b.HasOne("CRM_Demo.Models.Claim", "UserClaim")
                        .WithMany("Users")
                        .HasForeignKey("UserClaimId")
                        .HasConstraintName("FK__User__User_Claim__30F848ED");

                    b.Navigation("UserClaim");
                });

            modelBuilder.Entity("Domain_Layer.Models.courseEnquiry", b =>
                {
                    b.HasOne("Domain_Layer.Models.course", "course")
                        .WithMany("courseEnquiries")
                        .HasForeignKey("courseId")
                        .HasConstraintName("FK__CourseEnq__Cours__2D27B809");

                    b.Navigation("course");
                });

            modelBuilder.Entity("Domain_Layer.Models.resourceEnquiry", b =>
                {
                    b.HasOne("Domain_Layer.Models.resource", "resource")
                        .WithMany("resourceEnquiries")
                        .HasForeignKey("resourceId")
                        .HasConstraintName("FK__ResourseE__Resou__300424B4")
                        .IsRequired();

                    b.Navigation("resource");
                });

            modelBuilder.Entity("CRM_Demo.Models.Claim", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain_Layer.Models.course", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("courseEnquiries");
                });

            modelBuilder.Entity("Domain_Layer.Models.courseEnquiry", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("Domain_Layer.Models.resource", b =>
                {
                    b.Navigation("resourceEnquiries");
                });
#pragma warning restore 612, 618
        }
    }
}
